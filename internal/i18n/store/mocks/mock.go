// Code generated by MockGen. DO NOT EDIT.
// Source: i18n_store.go
//
// Generated by this command:
//
//	mockgen -source=i18n_store.go -destination=mocks/mock.go
//

// Package mock_store is a generated GoMock package.
package mock_store

import (
	reflect "reflect"

	domain "github.com/satont/twitch-notifier/internal/domain"
	gomock "go.uber.org/mock/gomock"
)

// MockI18nStore is a mock of I18nStore interface.
type MockI18nStore struct {
	ctrl     *gomock.Controller
	recorder *MockI18nStoreMockRecorder
}

// MockI18nStoreMockRecorder is the mock recorder for MockI18nStore.
type MockI18nStoreMockRecorder struct {
	mock *MockI18nStore
}

// NewMockI18nStore creates a new mock instance.
func NewMockI18nStore(ctrl *gomock.Controller) *MockI18nStore {
	mock := &MockI18nStore{ctrl: ctrl}
	mock.recorder = &MockI18nStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockI18nStore) EXPECT() *MockI18nStoreMockRecorder {
	return m.recorder
}

// GetKey mocks base method.
func (m *MockI18nStore) GetKey(language domain.Language, key string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKey", language, key)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetKey indicates an expected call of GetKey.
func (mr *MockI18nStoreMockRecorder) GetKey(language, key any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKey", reflect.TypeOf((*MockI18nStore)(nil).GetKey), language, key)
}

// GetSupportedLanguages mocks base method.
func (m *MockI18nStore) GetSupportedLanguages() []domain.Language {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSupportedLanguages")
	ret0, _ := ret[0].([]domain.Language)
	return ret0
}

// GetSupportedLanguages indicates an expected call of GetSupportedLanguages.
func (mr *MockI18nStoreMockRecorder) GetSupportedLanguages() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSupportedLanguages", reflect.TypeOf((*MockI18nStore)(nil).GetSupportedLanguages))
}
