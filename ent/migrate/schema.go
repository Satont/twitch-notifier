// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ChannelsColumns holds the columns for the "channels" table.
	ChannelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "channel_id", Type: field.TypeString},
		{Name: "service", Type: field.TypeEnum, Enums: []string{"twitch"}},
	}
	// ChannelsTable holds the schema information for the "channels" table.
	ChannelsTable = &schema.Table{
		Name:       "channels",
		Columns:    ChannelsColumns,
		PrimaryKey: []*schema.Column{ChannelsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "channel_channel_id_service",
				Unique:  true,
				Columns: []*schema.Column{ChannelsColumns[1], ChannelsColumns[2]},
			},
		},
	}
	// ChatsColumns holds the columns for the "chats" table.
	ChatsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "chat_id", Type: field.TypeString},
		{Name: "service", Type: field.TypeEnum, Enums: []string{"telegram"}},
	}
	// ChatsTable holds the schema information for the "chats" table.
	ChatsTable = &schema.Table{
		Name:       "chats",
		Columns:    ChatsColumns,
		PrimaryKey: []*schema.Column{ChatsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "chat_chat_id_service",
				Unique:  true,
				Columns: []*schema.Column{ChatsColumns[1], ChatsColumns[2]},
			},
		},
	}
	// ChatSettingsColumns holds the columns for the "chat_settings" table.
	ChatSettingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "game_change_notification", Type: field.TypeBool, Default: true},
		{Name: "offline_notification", Type: field.TypeBool, Default: true},
		{Name: "chat_language", Type: field.TypeEnum, Enums: []string{"ru", "en"}, Default: "en"},
		{Name: "chat_chat_settings", Type: field.TypeUUID, Unique: true, Nullable: true},
	}
	// ChatSettingsTable holds the schema information for the "chat_settings" table.
	ChatSettingsTable = &schema.Table{
		Name:       "chat_settings",
		Columns:    ChatSettingsColumns,
		PrimaryKey: []*schema.Column{ChatSettingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "chat_settings_chats_chat_settings",
				Columns:    []*schema.Column{ChatSettingsColumns[4]},
				RefColumns: []*schema.Column{ChatsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// FollowsColumns holds the columns for the "follows" table.
	FollowsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "channel_follows", Type: field.TypeUUID, Nullable: true},
		{Name: "chat_follows", Type: field.TypeUUID, Nullable: true},
	}
	// FollowsTable holds the schema information for the "follows" table.
	FollowsTable = &schema.Table{
		Name:       "follows",
		Columns:    FollowsColumns,
		PrimaryKey: []*schema.Column{FollowsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "follows_channels_follows",
				Columns:    []*schema.Column{FollowsColumns[1]},
				RefColumns: []*schema.Column{ChannelsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "follows_chats_follows",
				Columns:    []*schema.Column{FollowsColumns[2]},
				RefColumns: []*schema.Column{ChatsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ChannelsTable,
		ChatsTable,
		ChatSettingsTable,
		FollowsTable,
	}
)

func init() {
	ChatSettingsTable.ForeignKeys[0].RefTable = ChatsTable
	FollowsTable.ForeignKeys[0].RefTable = ChannelsTable
	FollowsTable.ForeignKeys[1].RefTable = ChatsTable
}
